<h1>MVC</h1>
<h3>O que é </h3>
<p>MVC é nada mais que um padrão de arquitetura de software, separando sua aplicação em 3 camadas. A camada de interação do usuário(view), a camada de manipulação dos dados(model) e a camada de controle(controller).<br><br>
MODAL
sempre que você pensar em manipulação de dados, pense em model. Ele é responsável pela leitura e escrita de dados, e também de suas validações.<br><br>
VIEW
a camada de interação com o usuário. Ela apenas faz a  exibição dos dados, sendo ela por meio de um html ou xml.<br><br>
CONTROLLER
o responsável por receber todas as requisições do usuário. Seus métodos chamados actions são responsáveis por uma página, controlando qual model usar e qual view será mostrado ao usuário.</p>
<h3>DAO no MVC</h3>
<p>A classe DAO faz parte da Model, nela você pega os dados do servidor e persiste no banco, ou pega os dados do banco e joga no servidor.</p>
<h3>Melhores Frameworks - Comando de Visão</h3>
<p>Angular</p>
<p>ReactJS</p>
<p>Vue.js</p>
<h3>ORM</h3>
<p>Visando aproveitar ao máximo o conceito de Orientação a Objetos, o Mapeamento Objeto-Relacional (ORM) consiste em um framework que tem por objetivo suprir as disparidades entre o paradigma orientado a objetos e o modelo entidade-relacional, criando uma ponte (mapeamento) entre o modelo relacional e o modelo orientado a objetos.</p>
<p>JAVA ORM - Fluent NHibernate</p>
<p>RUBY ORM - ActiveRecord</p>